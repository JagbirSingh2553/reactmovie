{"ast":null,"code":"var _jsxFileName = \"/home/jack/Desktop/movie_blog/src/components/Trailer/Trailer.js\";\nimport React, { Component } from 'react';\nimport Video from '../elements2/Video/Video';\nimport Spinner from '../elements2/Spinner/Spinner';\nimport Navigation from '../elements2/Navigation/Navigation';\nimport { API_URL, API_KEY } from '../../config';\n\nclass Trailer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tvshows: null,\n      tvshowName: null,\n      trailer: null,\n      loading: false\n    };\n\n    this.fetchItems = endpoint => {\n      fetch(endpoint).then(result => result.json()).then(result => {\n        console.log(result); // if(result.status_code){\n        //     this.setState({loading: false});\n        // }else{\n        //     this.setState({tvshows: result }, () => {\n        //         //... then fetch actors in the setstate call back function\n        //         const endpoint = `${API_URL}tv/${this.props.match.params.tvshowId}/credits?api_key=${API_KEY}`;\n        //         fetch(endpoint)\n        //         .then(result => result.json())\n        //         .then(result => {\n        //             const directors = result.crew.filter((member)=> member.job === \"Director\");\n        //             this.setState({\n        //                 actors: result.cast,\n        //                 directors,\n        //                 loading: false\n        //             })\n        //         })\n        //     })\n        // }\n      }).catch(error => console.error('ERROR:', error));\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    }); //first fetch the movie\n\n    const endpoint = `${API_URL}movie/${this.props.match.params.movieId}/videos?api_key=${API_KEY}&language=en-US`;\n    this.fetchItems(endpoint);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, this.state.tvshows ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Navigation, {\n      tvshows: this.props.location.tvshowName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(Video, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 23\n      }\n    })) : null);\n  }\n\n}\n\nexport default Trailer;","map":{"version":3,"sources":["/home/jack/Desktop/movie_blog/src/components/Trailer/Trailer.js"],"names":["React","Component","Video","Spinner","Navigation","API_URL","API_KEY","Trailer","state","tvshows","tvshowName","trailer","loading","fetchItems","endpoint","fetch","then","result","json","console","log","catch","error","componentDidMount","setState","props","match","params","movieId","render","location"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,SAAQC,OAAR,EAAiBC,OAAjB,QAAgC,cAAhC;;AAGA,MAAMC,OAAN,SAAsBN,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC5BO,KAD4B,GACpB;AACJC,MAAAA,OAAO,EAAE,IADL;AAEJC,MAAAA,UAAU,EAAE,IAFR;AAGJC,MAAAA,OAAO,EAAC,IAHJ;AAIJC,MAAAA,OAAO,EAAE;AAJL,KADoB;;AAAA,SAa5BC,UAb4B,GAadC,QAAD,IAAc;AACvBC,MAAAA,KAAK,CAACD,QAAD,CAAL,CACCE,IADD,CACMC,MAAM,IAAIA,MAAM,CAACC,IAAP,EADhB,EAECF,IAFD,CAEMC,MAAM,IAAI;AACZE,QAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ,EADY,CAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,OAvBD,EAwBCI,KAxBD,CAwBOC,KAAK,IAAIH,OAAO,CAACG,KAAR,CAAc,QAAd,EAAuBA,KAAvB,CAxBhB;AAyBH,KAvC2B;AAAA;;AAO5BC,EAAAA,iBAAiB,GAAE;AACf,SAAKC,QAAL,CAAc;AAAEZ,MAAAA,OAAO,EAAE;AAAX,KAAd,EADe,CAEf;;AACA,UAAME,QAAQ,GAAI,GAAET,OAAQ,SAAQ,KAAKoB,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,OAAQ,mBAAkBtB,OAAQ,iBAA9F;AACA,SAAKO,UAAL,CAAgBC,QAAhB;AACH;;AA6BGe,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,KAAKrB,KAAL,CAAWC,OAAX,gBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAE,KAAKgB,KAAL,CAAWK,QAAX,CAAoBpB,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eAEA,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,eAGA,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,CADA,GAMC,IAPP,CADJ;AAYH;;AAtDuB;;AA0DhC,eAAeH,OAAf","sourcesContent":["import React, { Component } from 'react' ; \nimport Video from '../elements2/Video/Video';\nimport Spinner from '../elements2/Spinner/Spinner';\nimport Navigation from '../elements2/Navigation/Navigation';\nimport {API_URL, API_KEY } from '../../config';\n\n\nclass Trailer extends Component {\n    state = {\n        tvshows: null,\n        tvshowName: null,\n        trailer:null,\n        loading: false\n    }\n    componentDidMount(){\n        this.setState({ loading: true })\n        //first fetch the movie\n        const endpoint = `${API_URL}movie/${this.props.match.params.movieId}/videos?api_key=${API_KEY}&language=en-US`;\n        this.fetchItems(endpoint);\n    }\n    fetchItems = (endpoint) => {\n        fetch(endpoint)\n        .then(result => result.json())\n        .then(result => {\n            console.log(result)\n            // if(result.status_code){\n            //     this.setState({loading: false});\n            // }else{\n            //     this.setState({tvshows: result }, () => {\n            //         //... then fetch actors in the setstate call back function\n            //         const endpoint = `${API_URL}tv/${this.props.match.params.tvshowId}/credits?api_key=${API_KEY}`;\n            //         fetch(endpoint)\n            //         .then(result => result.json())\n            //         .then(result => {\n            //             const directors = result.crew.filter((member)=> member.job === \"Director\");\n\n            //             this.setState({\n            //                 actors: result.cast,\n            //                 directors,\n            //                 loading: false\n            //             })\n            //         })\n            //     })\n            // }\n        })\n        .catch(error => console.error('ERROR:',error))\n    }\n    \n        render (){\n            return(\n                <div>\n                     {this.state.tvshows ? \n                      <div>\n                      <Navigation tvshows={this.props.location.tvshowName}/>\n                      <Spinner />\n                      <Video />\n                      </div>\n                      :null }\n                </div>\n               \n            )\n        }\n            \n \n}\nexport default Trailer;"]},"metadata":{},"sourceType":"module"}