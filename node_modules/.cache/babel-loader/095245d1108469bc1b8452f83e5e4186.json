{"ast":null,"code":"var _jsxFileName = \"/home/jack/Desktop/movie_blog/src/components/Trailer/Trailer.js\";\nimport React, { Component } from 'react';\nimport { API_URL, API_KEY } from '../../config';\n\nclass Trailer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movie: null,\n      trailerId: this.props.movieId,\n      loading: false\n    };\n\n    this.fetchItems = endpoint => {\n      fetch(endpoint).then(result => result.json()).then(result => {\n        console.log(result); // if(result.status_code){\n        //     this.setState({loading: false});\n        // }else{\n        //     this.setState({tvshows: result }, () => {\n        //         //... then fetch actors in the setstate call back function\n        //         const endpoint = `${API_URL}tv/${this.props.match.params.tvshowId}/credits?api_key=${API_KEY}`;\n        //         fetch(endpoint)\n        //         .then(result => result.json())\n        //         .then(result => {\n        //             const directors = result.crew.filter((member)=> member.job === \"Director\");\n        //             this.setState({\n        //                 actors: result.cast,\n        //                 directors,\n        //                 loading: false\n        //             })\n        //         })\n        //     })\n        // }\n      }).catch(error => console.error('ERROR:', error));\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    }); //first fetch the movie\n\n    const endpoint = `${API_URL}movie/id=${this.trailerId}/videos?api_key=${API_KEY}&language=en-US`;\n    this.fetchItems(endpoint);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    });\n  }\n\n}\n\nexport default Trailer;","map":{"version":3,"sources":["/home/jack/Desktop/movie_blog/src/components/Trailer/Trailer.js"],"names":["React","Component","API_URL","API_KEY","Trailer","state","movie","trailerId","props","movieId","loading","fetchItems","endpoint","fetch","then","result","json","console","log","catch","error","componentDidMount","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,EAAiBC,OAAjB,QAAgC,cAAhC;;AAGA,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC5BI,KAD4B,GACpB;AACJC,MAAAA,KAAK,EAAE,IADH;AAEJC,MAAAA,SAAS,EAAC,KAAKC,KAAL,CAAWC,OAFjB;AAGJC,MAAAA,OAAO,EAAE;AAHL,KADoB;;AAAA,SAY5BC,UAZ4B,GAYdC,QAAD,IAAc;AACvBC,MAAAA,KAAK,CAACD,QAAD,CAAL,CACCE,IADD,CACMC,MAAM,IAAIA,MAAM,CAACC,IAAP,EADhB,EAECF,IAFD,CAEMC,MAAM,IAAI;AACZE,QAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ,EADY,CAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,OAvBD,EAwBCI,KAxBD,CAwBOC,KAAK,IAAIH,OAAO,CAACG,KAAR,CAAc,QAAd,EAAuBA,KAAvB,CAxBhB;AAyBH,KAtC2B;AAAA;;AAM5BC,EAAAA,iBAAiB,GAAE;AACf,SAAKC,QAAL,CAAc;AAAEZ,MAAAA,OAAO,EAAE;AAAX,KAAd,EADe,CAEf;;AACA,UAAME,QAAQ,GAAI,GAAEV,OAAQ,YAAW,KAAKK,SAAU,mBAAkBJ,OAAQ,iBAAhF;AACA,SAAKQ,UAAL,CAAgBC,QAAhB;AACH;;AA6BGW,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAMH;;AA/CuB;;AAmDhC,eAAenB,OAAf","sourcesContent":["import React, { Component } from 'react' ; \nimport {API_URL, API_KEY } from '../../config';\n\n\nclass Trailer extends Component {\n    state = {\n        movie: null,\n        trailerId:this.props.movieId,\n        loading: false\n    }\n    componentDidMount(){\n        this.setState({ loading: true })\n        //first fetch the movie\n        const endpoint = `${API_URL}movie/id=${this.trailerId}/videos?api_key=${API_KEY}&language=en-US`;\n        this.fetchItems(endpoint);\n    }\n    fetchItems = (endpoint) => {\n        fetch(endpoint)\n        .then(result => result.json())\n        .then(result => {\n            console.log(result)\n            // if(result.status_code){\n            //     this.setState({loading: false});\n            // }else{\n            //     this.setState({tvshows: result }, () => {\n            //         //... then fetch actors in the setstate call back function\n            //         const endpoint = `${API_URL}tv/${this.props.match.params.tvshowId}/credits?api_key=${API_KEY}`;\n            //         fetch(endpoint)\n            //         .then(result => result.json())\n            //         .then(result => {\n            //             const directors = result.crew.filter((member)=> member.job === \"Director\");\n\n            //             this.setState({\n            //                 actors: result.cast,\n            //                 directors,\n            //                 loading: false\n            //             })\n            //         })\n            //     })\n            // }\n        })\n        .catch(error => console.error('ERROR:',error))\n    }\n    \n        render (){\n            return(\n                <div>\n                     \n                </div>\n               \n            )\n        }\n            \n \n}\nexport default Trailer;"]},"metadata":{},"sourceType":"module"}